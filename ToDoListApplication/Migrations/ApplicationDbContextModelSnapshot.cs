// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoListApplication.Data;

#nullable disable

namespace ToDoListApplication.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoListApplication.Models.MyList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("MyLists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deadline = new DateTime(2025, 2, 25, 13, 51, 7, 34, DateTimeKind.Local).AddTicks(6704),
                            Description = "Study HTML Study HTML Study HTML ",
                            Title = "Study HTML",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Deadline = new DateTime(2025, 3, 2, 18, 51, 7, 34, DateTimeKind.Local).AddTicks(6789),
                            Description = "Study CSS Study CSS Study CSS ",
                            Title = "Study CSS",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Deadline = new DateTime(2025, 3, 8, 5, 51, 7, 34, DateTimeKind.Local).AddTicks(6792),
                            Description = "Study JS Study JS Study JS",
                            Title = "Study JS",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Deadline = new DateTime(2025, 3, 18, 0, 51, 7, 34, DateTimeKind.Local).AddTicks(6848),
                            Description = "Study MVC Study MVC Study MVC",
                            Title = "Study MVC",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Deadline = new DateTime(2025, 3, 18, 0, 51, 7, 34, DateTimeKind.Local).AddTicks(6851),
                            Description = "Study LINQ Study LINQ Study LINQ",
                            Title = "Study LINQ",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("ToDoListApplication.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Mansoura",
                            Email = "Loai@yaho",
                            Name = "Loai",
                            Password = "123456",
                            Phone = "0501255623"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Mansoura",
                            Email = "Menna@yaho",
                            Name = "Menna",
                            Password = "147258",
                            Phone = "05012s55623"
                        });
                });

            modelBuilder.Entity("ToDoListApplication.Models.MyList", b =>
                {
                    b.HasOne("ToDoListApplication.Models.User", "User")
                        .WithMany("MyLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ToDoListApplication.Models.User", b =>
                {
                    b.Navigation("MyLists");
                });
#pragma warning restore 612, 618
        }
    }
}
